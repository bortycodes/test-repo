# USERGROUP CODE CONVERT
convert.usergroup.first=SELECT SUBSTR(T1.ID,-5) CMS_CG_ID, \
  T1.ID BOB_CG_ID, T2.CD CORP_CD \
  FROM TBL_CORP_GROUP T1, TBL_CORPORATION T2 \
  WHERE T1.CORP_ID = T2.ID AND T2.STATUS = 2

convert.usergroup.check=SELECT * FROM CORP_GROUP_ID_CONVERT

convert.usergroup.fetch=SELECT T1.ID BOB_CG_ID, T2.CD CORP_CD, T1.DSCP \
  FROM TBL_CORP_GROUP T1, TBL_CORPORATION T2 \
  WHERE T1.CORP_ID = T2.ID AND T2.STATUS = 2

    
# CHECK AND SAVE
query.delete=DELETE FROM PROCESSED_INPUTS WHERE FLAG = 2

query.check=SELECT CIF, CORP_CD FROM PROCESSED_INPUTS WHERE FLAG = 3

generate.save=INSERT INTO PROCESSED_INPUTS (CIF, CORP_CD, FLAG) VALUES (?, ?, 2)

migrate.retrieve=SELECT CIF, CORP_CD FROM PROCESSED_INPUTS WHERE FLAG = 2

migrate.update=UPDATE PROCESSED_INPUTS \
  SET FLAG = 3 \
  WHERE CIF IN (?)


# SELECT FROM CIBUAT
#Table01|CIM_CUST_DEFN_MB
generate.select.cimCustDefnMb=SELECT DISTINCT A.*,T3.DSCP AS SEGMENT_NAME \
  FROM (\
    SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, T1.NM AS CUST_NAME, T1.NM AS CUST_NAME_LOC_LANG, TO_NUMBER(T2.BRANCH_CD) AS BRANCH, T2.HOST_NAME AS CUSTOMER_SHORT_NAME_LOC, \
    T2.HOST_NAME AS CUSTOMER_OTH_NAME, T2.HOST_NAME AS CUSTOMER_OTH_NAME_LOC, \
    'A' AS CIF_STATUS, 'BDOPHL' AS BANK_ENTITY_ID, T2.HOST_NAME AS SHORT_NAME, T1.CD AS CLIENT_CODE, \
    '1' AS CUST_CATEGORY, 'N' AS GOVT_COMPANY, 'NA' AS FATCA_COMPLIANT, 'N' AS EMAIL_INDEMNITY, \
    'TIN' AS TAX_CODE, T1.TIN AS TAX_ID, 'N' AS ETRANS_SIGNING, 'N' AS ZIP_REQ, \
    'Y' AS CHARGES_POSTING_REQUIRED, 'Y' AS ALERT_REQ_FROM_BACKEND_SYS, 'Y' AS CHARGE_DEBIT_ACCT_NO, \
    '0' AS ETRANS_SIGN_THRESHOLD, 'PHP' AS OPERATING_CCY, ? AS ORG_NAME, RM_TEAM_ID, row_number() over(partition by T2.CIF order by T2.CIF) as RN \
  FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
  WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) A \
  INNER JOIN (\
    SELECT CUST_ID, MIN(RN) AS RN \
    FROM (\
        SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, row_number() over(partition by T2.CIF order by T2.CIF) as RN \
        FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
        WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) \
    GROUP BY CUST_ID) B ON A.CUST_ID = B.CUST_ID AND A.RN = B.RN \
    LEFT JOIN TBL_TEAM T3 \
    ON A.RM_TEAM_ID = T3.ID

#Table02|CIM_CUST_CONTACT_INFO_MB
generate.select.cimCustContactInfoMb=SELECT A.*, TO_CHAR(NVL(T3.MOBILE_NO,'09999999999')) AS MOBILE_NO, TO_CHAR(NVL(T3.EMAIL, 'BOBNoemail@bdo.com.ph')) AS EMAIL, '63' AS MOBILE_NO_DIAL_CODE \
      FROM (\
        SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, TO_CHAR(T1.NM) AS NAME, '1' AS CONTACT_TYPE, '' AS FAX, '' AS FAX_NO_DIAL_CODE, '--' AS CITY, '--' AS STATE, '00000' AS POSTAL_CODE, \
        'PH' AS COUNTRY, '' AS LANDLINE, \
        TO_CHAR(NVL(ADDRESS, 'NA')) AS ADDRESS_LINE1, '' AS ADDRESS_LINE2, '' AS ADDRESS_LINE3, '' AS ADDRESS_LINE4, TO_CHAR(T1.ID) AS CORP_ID, \
        row_number() over(partition by T2.CIF order by T2.CIF) as RN \
        FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
        WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) A \
      INNER JOIN (\
        SELECT CUST_ID, MIN(RN) AS RN \
        FROM (\
            SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, row_number() over(partition by T2.CIF order by T2.CIF) as RN \
            FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
            WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) \
        GROUP BY CUST_ID) B ON A.CUST_ID = B.CUST_ID AND A.RN = B.RN \
        LEFT JOIN TBL_CORP_USR T3 \
        ON A.CORP_ID = T3.CORP_ID AND IS_PRIMARY = 1 \
    UNION ALL \
    SELECT A.*, '09999999999' AS MOBILE_NO, 'BOBNoemail@bdo.com.ph' AS EMAIL, '63' AS MOBILE_NO_DIAL_CODE \
      FROM (\
        SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, 'NA' AS NAME, '2' AS CONTACT_TYPE, '' AS FAX, '' AS FAX_NO_DIAL_CODE, '--' AS CITY, '--' AS STATE, '00000' AS POSTAL_CODE, \
        'PH' AS COUNTRY, '' AS LANDLINE, \
        NULL AS ADDRESS_LINE1, \
        NULL AS ADDRESS_LINE2, \
        NULL AS ADDRESS_LINE3, \
        NULL AS ADDRESS_LINE4, '' AS CORP_ID, \
        row_number() over(partition by T2.CIF order by T2.CIF) as RN \
        FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
        WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) A \
      INNER JOIN (\
        SELECT CUST_ID, MIN(RN) AS RN \
        FROM (\
            SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, row_number() over(partition by T2.CIF order by T2.CIF) as RN \
            FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
            WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) \
        GROUP BY CUST_ID) B ON A.CUST_ID = B.CUST_ID AND A.RN = B.RN \
    UNION ALL \
    SELECT A.*, TO_CHAR(NVL(T3.MOBILE_NO,'09999999999')) AS MOBILE_NO, TO_CHAR(NVL(T3.EMAIL, 'BOBNoemail@bdo.com.ph')) AS EMAIL, '63' AS MOBILE_NO_DIAL_CODE \
      FROM (\
        SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, TO_CHAR(T1.NM) AS NAME, '3' AS CONTACT_TYPE, '' AS FAX, '' AS FAX_NO_DIAL_CODE, '--' AS CITY, '--' AS STATE, '00000' AS POSTAL_CODE, \
        'PH' AS COUNTRY, '' AS LANDLINE, \
        TO_CHAR(NVL(ADDRESS, 'NA')) AS ADDRESS_LINE1, '' AS ADDRESS_LINE2, '' AS ADDRESS_LINE3, '' AS ADDRESS_LINE4, TO_CHAR(T1.ID) AS CORP_ID, \
        row_number() over(partition by T2.CIF order by T2.CIF) as RN \
        FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
        WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) A \
      INNER JOIN (\
        SELECT CUST_ID, MIN(RN) AS RN \
        FROM (\
            SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, row_number() over(partition by T2.CIF order by T2.CIF) as RN \
            FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
            WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) \
        GROUP BY CUST_ID) B ON A.CUST_ID = B.CUST_ID AND A.RN = B.RN \
        LEFT JOIN TBL_CORP_USR T3 \
        ON A.CORP_ID = T3.CORP_ID AND IS_PRIMARY = 1 \
        UNION ALL \
    SELECT A.*, TO_CHAR(NVL(T3.MOBILE_NO,'09999999999')) AS MOBILE_NO, TO_CHAR(NVL(T3.EMAIL, 'BOBNoemail@bdo.com.ph')) AS EMAIL,  \
        TO_CHAR(NVL(T3.COUNTRY_CD, '63')) AS MOBILE_NO_DIAL_CODE \
      FROM (\
        SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, TO_CHAR(T1.NM) AS NAME, '4' AS CONTACT_TYPE, TO_CHAR(NVL(SUBSTR(T1.FAX_NO, 1, 20), '')) AS FAX, '' AS FAX_NO_DIAL_CODE, '--' AS CITY, '--' AS STATE, \
        '00000' AS POSTAL_CODE, \
        'PH' AS COUNTRY, TO_CHAR(SUBSTR(T1.TEL_NO, 1, 20)) AS LANDLINE, \
        TO_CHAR(NVL(ADDRESS, 'NA')) AS ADDRESS_LINE1, '' AS ADDRESS_LINE2, '' AS ADDRESS_LINE3, '' AS ADDRESS_LINE4, TO_CHAR(T1.ID) AS CORP_ID, \
        row_number() over(partition by T2.CIF order by T2.CIF) as RN \
        FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
        WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) A \
      INNER JOIN ( \
        SELECT CUST_ID, MIN(RN) AS RN \
        FROM ( \
            SELECT LPAD(T2.CIF, 10, '0') AS CUST_ID, row_number() over(partition by T2.CIF order by T2.CIF) as RN \
            FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
            WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND T2.IS_OWN = 1 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?) \
        GROUP BY CUST_ID) B ON A.CUST_ID = B.CUST_ID AND A.RN = B.RN \
        LEFT JOIN TBL_CORP_USR T3 \
        ON A.CORP_ID = T3.CORP_ID AND IS_PRIMARY = 1 \

#Table03|CIM_CUST_ACCT_MB
generate.select.cimCustAcctMb=SELECT A.* \
  FROM (\
    SELECT LPAD(T1.CIF, 10, '0') AS CUST_ID, T1.TYPE_CD AS ACCT_CATEGORY, T1.NO AS ACCT_NO, T1.NAME AS ACCT_NAME, \
    T1.NAME AS ACCT_NAME_LOC_LANG, T1.ALIAS AS ALIAS_NAME, T1.HOST_NAME AS HOST_ID, T1.TYPE_CD AS ACCT_TYPE, \
    'A' AS ACCT_STATUS, 'BDO' AS BANK, TO_NUMBER(T1.BRANCH_CD) AS BRANCH, 'PH' AS COUNTRY, T1.CURRENCY_CD AS CURRENCY, \
    T1.TYPE_CD AS ACCT_TYPE_FOR_CIM, 1 AS VERSION_NO, row_number() over(partition by T1.CIF, T1.NO order by T1.CIF, T1.NO) as RN \
    FROM TBL_ACCOUNT T1, TBL_CORPORATION T2 \
    WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T1.IS_OWN = 1 AND T2.STATUS = 2 AND LPAD(T1.CIF, 10, '0') = ?) A \
  INNER JOIN (\
    SELECT CUST_ID, ACCT_NO, MIN(RN) AS RN \
    FROM (\
        SELECT LPAD(T1.CIF, 10, '0') AS CUST_ID, T1.NO AS ACCT_NO, row_number() over(partition by T1.CIF, T1.NO order by T1.CIF, T1.NO) as RN \
        FROM TBL_ACCOUNT T1, TBL_CORPORATION T2 \
        WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T1.IS_OWN = 1 AND T2.STATUS = 2 AND LPAD(T1.CIF, 10, '0') = ?) \
    GROUP BY CUST_ID, ACCT_NO) B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NO = B.ACCT_NO AND A.RN = B.RN

#Table04|CIM_CUST_BILLING_DETAILS_MB
generate.select.cimCustBillingDetailsMb=WHT_RATE_PERCENTAGE:0|IMMEDIATE_CHARGE_POSTING:Y|OTHER_ACCOUNT:[SUBQUERY.CIM_CUST_BILLING_DETAILS_MB.OTHER_ACCOUNT.CORP_CODE.CIF]|CHARGE_ACCT_NO_CCY:PHP|WHT_CATEGORY:C|WHT_HANDLED_BY:C|ACCT_FOR_AVG_BAL|TAX_SET:TAXEXEMPTION|TAX_SET_NAME:Exempted|CUST_ID:[CIF]|VERSION_NO|BATCH_ID|BATCH_DATE|PROCESS_FLAG
generate.select.cimCustBillingDetailsMb.other_account=SELECT T1.NO AS VALUE \
    FROM TBL_ACCOUNT T1, TBL_CORPORATION T2 \
    WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T1.IS_OWN = 1 AND T2.STATUS = 2 \
    AND UPPER(T2.CD) = ? AND LPAD(T1.CIF, 10, '0') = ? \
    AND ROWNUM = 1 \
    ORDER BY T1.NO

#Table05|CIM_PAYMENT_BKFT_DT_MB
generate.select.cimPaymentBkftDtMb=SELECT DISTINCT TO_CHAR(B.FUNC_ID) AS OD_SUBPROD_CODE \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT  C, TBL_ACCOUNT D \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID \
  AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS =2 AND B.ROLE IS NOT NULL \
  AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 AND C.FUNC_ID IS \
  NOT NULL)) AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND LPAD(D.CIF, 10, '0') = ?

#Table06|CIM_PAYMENT_CUST_PREF_MB
generate.select.cimPaymentCustPrefMb=CUST_ID:[CIF]|FILE_DUP_CHK_REQ:Y|FILE_DUP_BEHAVIOR:R|BATCH_DUP_CHK_REQ:Y|BATCH_DUP_BEHAVIOR:R|TXN_DUP_CHK_REQ:Y|TXN_DUP_BEHAVIOR:R|VERSION_NO|DEBIT_LVL_ID|PROD_CUT_OFF:E|PYMNT_MODE_ID|WHT_APPLICABLE:N|WHT_NO|NO_DEBIT_RETRIES:2|WHT_TEMP_ID|WHT_TEMP_NAME|FILE_PAR_PROCESS_ID:RCF|SPLITTING_ALLOWED:N|EARMARKING_APPLICABLE|DISCLOSE_BENEFICIARY_NAME|FILE_NAMING_CONVENTION_CHECK|UPFRONT_REGULAR_CHG:U|DOM_ST_THROUGH_PROCESS:Y|DOM_CROSS_CCY_CONVERSION:N|INT_ST_THROUGH_PROCESS:N|INT_CROSS_CCY_CONVERSION:N|INCOMING_FOLDER_PATH|OUTGOING_FOLDER_PATH|TAX_PAY_REQ_APPROVAL:N

#Table07|CIM_PAYMENT_PARAMS_MB
generate.select.cimPaymentParamsMb=SELECT DISTINCT TO_CHAR(B.FUNC_ID) AS OD_SUBPROD_CODE \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT  C, TBL_ACCOUNT D \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID \
  AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS =2 AND B.ROLE IS NOT NULL \
  AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 AND C.FUNC_ID IS \
  NOT NULL)) AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND LPAD(D.CIF, 10, '0') = ?

#Table08|CIM_BUSINESS_PARAMS_MB
generate.select.cimBusinessParamsMb=SELECT DISTINCT TO_CHAR(B.FUNC_ID) AS OD_SUBPROD_CODE \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT  C, TBL_ACCOUNT D \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID \
  AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS =2 AND B.ROLE IS NOT NULL \
  AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 AND C.FUNC_ID IS \
  NOT NULL)) AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND LPAD(D.CIF, 10, '0') = ?

#Table09|CIM_DOMAIN_DEFN
generate.select.cimDomainDefn=SELECT DISTINCT CD AS DOMAIN_ID, LPAD(CIF, 10, '0') AS CUST_ID, SUBSTR(NM, 1, 50) AS DOMAIN_NAME, 'CORP' AS DOMAIN_TYPE, 'A' AS DOMAIN_STATUS, \
    SYSDATE AS CREATED_ON \
    FROM TBL_CORPORATION T1, TBL_ACCOUNT T2 \
    WHERE T1.ID = T2.CORP_ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND UPPER(T1.CD) = ? AND LPAD(T2.CIF, 10, '0') = ?

#Table10|CIM_CUSTOMER_LIMIT_MB
    generate.select.cimCustomerLimitMb=SELECT A.* \
      FROM (\
        SELECT LPAD(T1.CIF, 10, '0') AS CUST_ID, 'N' AS E_TXN_SIGNING, '99999' AS DAY_MAX_TXNS, '9999999999999999999' AS DAY_MAX_TXN_AMNT, 'N' AS DML_FLAG, \
        '30' AS MAX_SELF_SERVICE_USERS, 'Y' AS SELF_SERVICE_ENABLED, '100' AS MAX_CORP_USERS, '0' AS E_TXN_SIGNING_THRESHOLD, \
        row_number() over(partition by T1.CIF order by T1.CIF) as RN \
        FROM TBL_ACCOUNT T1, TBL_CORPORATION T2 \
        WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T1.IS_OWN = 1 AND T2.STATUS = 2 AND UPPER(T2.CD) = ? AND LPAD(T1.CIF, 10, '0') = ?) A \
      INNER JOIN (\
        SELECT CUST_ID, MIN(RN) AS RN \
        FROM (\
            SELECT LPAD(T1.CIF, 10, '0') AS CUST_ID, row_number() over(partition by T1.CIF order by T1.CIF) as RN \
            FROM TBL_ACCOUNT T1, TBL_CORPORATION T2 \
            WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T1.IS_OWN = 1 AND T2.STATUS = 2 AND UPPER(T2.CD) = ? AND LPAD(T1.CIF, 10, '0') = ?) \
        GROUP BY CUST_ID) B ON A.CUST_ID = B.CUST_ID AND A.RN = B.RN

#Table12|OD_CORPORATE_LIMITS_MB
generate.select.odCorporateLimitsMb=SELECT CD AS OD_GCIF, 'PHP' AS UNIT_CCY, 45 AS OD_MAX_APP_DAYS, ? AS OD_MAX_NO_OF_USERS, 9999999999999999 AS OD_DAILY_MAX_AMT, \
99999 AS OD_DAILY_MAX_NO_TRANS, 9999999999999999 AS OD_DAILY_MAX_AMT_UPL, 99999 AS OD_DAILY_MAX_NO_TRANS_UPL, 99999 AS DAY_CONSOLIDATED_TXN_NO, \
9999999999999999 AS DAY_CONSOLIDATED_TXN_AMT, 9999999999999999 AS DAY_CONSOL_MAX_APPROVAL_AMT, 9999999999999999 AS DAY_MAX_BULK_TXN_APPROVAL_AMT, \
9999999999999999 AS MAX_BULK_TXN_APPROVAL_AMT, 'Y' AS DAY_MAX_APPR_LIMIT_FLAG, 9999999999999999 AS DAY_MAX_APPROVAL_AMT, 'Y' AS TXN_MAX_APPR_LIMIT_FLAG, \
9999999999999999 AS TXN_MAX_APPROVAL_AMT, ? AS OD_MAX_ADMIN_USERS, 'Y' AS DAY_MAX_BULK_APPR_LIMIT_FLAG, 'Y' AS TXN_MAX_BULK_APPR_LIMIT_FLAG, \
DECODE(WF_MODEL, 1, 'Y', 2, 'Y', 'N') AS SELF_AUTH_LIMIT_FLAG, 'N' AS EXPRESS_ONBOARD, 'G' AS ROLE_LEVEL, 'N' AS EVALUATE_APPROVAL_LIMIT, 'N' AS LINK_PRODUCT_OR_ACCOUNTS \
FROM TBL_CORPORATION WHERE UPPER(CD) = ?

#Table13|OD_CORPORATE_FUNCTION_MB
generate.select.odCorporateFunctionMb=select distinct a.func_id FUNC_ID, c.role WF_MODEL from tbl_matrix_service a \
  inner join tbl_corporation b \
  on a.corp_id = b.id \
  inner join tbl_corp_usr c \
  on b.id = c.corp_id \
  where a.status = 2 and b.status = 2 and c.status = 2 and UPPER(b.cd) = ?

#Table14|OD_USERGROUP_MB
generate.select.odUsergroupMb=SELECT T1.ID AS OD_USERGROUP_CODE, T2.CD AS OD_GCIF, T1.DSCP AS OD_USERGROUP_NAME, \
  T1.DSCP AS OD_USERGROUP_DESC, 'MIGMKR' AS OD_MAKER_ID, SYSDATE AS OD_MAKER_DATE, 'MIGAUTH' AS OD_AUTH_ID, \
  SYSDATE AS OD_AUTH_DATE, 'A' AS OD_STATUS, 'MIGMKR' AS OD_MAKER_NAME, 'MIGAUTH' AS OD_AUTH_NAME, \
  CASE T1.ROLE \
  WHEN 6 THEN 'CA' \
  WHEN 7 THEN 'CA' \
  WHEN 8 THEN 'CA' \
  WHEN 4 THEN 'RO' \
  ELSE 'CF' \
  END AS OD_USERGROUP_TYPE \
  FROM TBL_CORP_GROUP T1, TBL_CORPORATION T2 \
  WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND UPPER(T2.CD) = ?

#Table15|OD_USERGP_FUNCTION_MB
generate.select.odUsergpFunctionMb=SELECT A.ID AS OD_USERGROUP_CODE, B.ROLE AS ROLE, \
  TO_CHAR(B.FUNC_ID) AS OD_SUBPROD_CODE, TO_CHAR(D.NO) AS OD_ACC_NO \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT  C, TBL_ACCOUNT D \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID \
  AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS =2 AND B.ROLE IS NOT NULL \
  AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 AND C.FUNC_ID IS \
  NOT NULL)) AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND LPAD(D.CIF, 10, '0') = ? \
UNION ALL \
SELECT B.ID AS OD_USERGROUP_CODE, B.ROLE AS ROLE, 'ADMIN' OD_SUBPROD_CODE, 'ADMIN' OD_ACC_NO FROM TBL_CORP_GROUP_SERVICE A \
INNER JOIN TBL_CORP_GROUP B \
ON A.CORP_GROUP_ID = B.ID \
INNER JOIN TBL_CORPORATION C \
ON B.CORP_ID = C.ID \
WHERE A.STATUS = 2 AND B.STATUS = 2 AND C.STATUS = 2 AND UPPER(C.CD) = ? AND B.ROLE IN (6, 7, 8)

#Table16|OD_USERGP_LIMITS_MB
generate.select.odUsergpLimitsMb=SELECT A.*, DECODE(OD_SELF_FLAG, 'Y', OD_DAILY_MAX_AUTH_AMT, '0') AS OD_SELF_AUTH_AMT \
FROM (SELECT T2.CD AS OD_GCIF, T1.ID AS OD_USERGROUP_CODE, 'ALL' AS UNIT_ID, 'PHP' AS UNIT_CCY, '9999999999' AS OD_DAILY_MAX_AMT, '99999' AS OD_DAILY_MAX_NO_TRANS, \
  '9999999999' AS OD_DAILY_MAX_AMT_UPL, '99999' AS OD_DAILY_MAX_NO_TRANS_UPL, '9999999999' AS OD_DAILY_MAX_AUTH_AMT, \
  DECODE(WF_MODEL, 1, 'Y', 2, 'Y', 'N') OD_SELF_FLAG, 'Y' AS OD_APPROVAL_FLAG, 'N' AS OD_AMT_MASKING_FLAG, '99999' AS DAY_CONSOLIDATED_TXN_NO, \
  '9999999999' AS DAY_CONSOLIDATED_TXN_AMT, '9999999999' AS DAY_CONSOL_MAX_APPROVAL_AMT, '9999999999' AS DAY_MAX_BULK_TXN_APPROVAL_AMT, \
  '9999999999' AS MAX_BULK_TXN_APPROVAL_AMT, \
  'Y' AS TXN_MAX_APPR_LIMIT_FLAG, '9999999999' AS TXN_MAX_APPROVAL_AMT, 'Y' AS DAY_MAX_BULK_APPR_LIMIT_FLAG, 'Y' AS TXN_MAX_BULK_APPR_LIMIT_FLAG \
  FROM TBL_CORP_GROUP T1, TBL_CORPORATION T2 \
  WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND UPPER(T2.CD) = ? AND T1.ROLE NOT IN (6,7,8)) A

#Table17|OD_USERS_MB
generate.select.odUsersMb=SELECT T2.CD AS OD_GCIF, \
  CASE T1.ROLE \
  WHEN 6 THEN 'CA' \
  WHEN 7 THEN 'CA' \
  WHEN 8 THEN 'CA' \
  WHEN 4 THEN 'RO' \
  ELSE 'CF' \
  END AS OD_USER_TYPE, T1.CD AS OD_LOGIN_ID, 'S' AS OD_TYPE_OF_AUTH, T1.FIRST_NM AS FIRST_NAME, \
  T1.MIDDLE_NM AS MIDDLE_NAME, T1.LAST_NM AS LAST_NAME, SUBSTR(T1.MOTHER_MAIDEN_NM, 1, 30) AS MOTHER_MAIDEN_NAME, \
  NVL(T1.BDAY, '01-JAN-90') AS DOB, '' AS RES_PH, \
  CASE \
	WHEN T1.MOBILE_NO IS NULL THEN '' \
	ELSE ('+' || TO_CHAR(T1.COUNTRY_CD) || TO_CHAR(T1.MOBILE_NO)) \
  END AS MOBILE_NO, \
  T2.ADDRESS AS ADDRESS_LINE1, T1.COUNTRY_CD AS COUNTRY, T1.EMAIL AS EMAIL_ID, \
  'MIGMKR' AS MAKER_ID, SYSDATE AS MAKER_DATE, 'MIGAUTH' AS AUTH_ID, SYSDATE AS AUTH_DATE, 'A' AS STATUS, \
  'MIGMKR' AS OD_MAKER_NAME, 'MIGAUTH' AS OD_AUTH_NAME, '0000' AS ZIP_CODE, '--' AS CITY, 'O' AS OD_UDF12, 'B' AS OD_UDF13 \
  FROM TBL_CORP_USR T1, TBL_CORPORATION T2 \
  WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND UPPER(T2.CD) = ?

#Table18|OD_USER_LIMITS_MB
generate.select.odUserLimitsMb=SELECT A.*, DECODE(OD_SELF_FLAG, 'Y', OD_DAILY_MAX_AUTH_AMT, '0') AS OD_SELF_AUTH_AMT \
FROM (SELECT T2.CD AS OD_GCIF, T1.CD AS OD_USER_NO, 'ALL' AS UNIT_ID, 'PHP' AS UNIT_CCY, '9999999999' AS OD_DAILY_MAX_AMT, \
'99999' AS OD_DAILY_MAX_NO_TRANS, '9999999999' AS OD_DAILY_MAX_AMT_UPL, '99999' AS OD_DAILY_MAX_NO_TRANS_UPL, '9999999999' AS OD_DAILY_MAX_AUTH_AMT, \
DECODE(WF_MODEL, 1, 'Y', 2, 'Y', 'N') AS OD_SELF_FLAG, 'Y' AS OD_APPROVAL_FLAG, 'N' AS OD_AMT_MASKING_FLAG, \
'99999' AS DAY_CONSOLIDATED_TXN_NO, '9999999999' AS DAY_CONSOLIDATED_TXN_AMT, '9999999999' AS DAY_CONSOL_MAX_APPROVAL_AMT, \
'9999999999' AS DAY_MAX_BULK_TXN_APPROVAL_AMT, '9999999999' AS MAX_BULK_TXN_APPROVAL_AMT, 'Y' AS TXN_MAX_APPR_LIMIT_FLAG, \
'9999999999' AS TXN_MAX_APPROVAL_AMT, 'Y' AS DAY_MAX_BULK_APPR_LIMIT_FLAG, 'Y' AS TXN_MAX_BULK_APPR_LIMIT_FLAG \
FROM TBL_CORP_USR T1, TBL_CORPORATION T2 WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND UPPER(T2.CD) = ?) A

#Table19|ORBIIBS_NICKNAME
generate.select.orbiibsNickname=SELECT DISTINCT '0' AS GCIF_COUNT, T1.CD AS LOGIN_ID, 'E' AS STATUS_FLAG, SYSDATE AS REGTIME, \
  'S' AS AUTHENTICATION_TYPE, \
  CASE T1.ROLE \
  WHEN 6 THEN 'CA' \
  WHEN 7 THEN 'CA' \
  WHEN 8 THEN 'CA' \
  WHEN 4 THEN 'RO' \
  ELSE 'CF' \
  END AS CUSTOMER_TYPE, T2.CD AS GCIF \
  FROM TBL_CORP_USR T1, TBL_CORPORATION T2 \
  WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T2.STATUS = 2 AND UPPER(T2.CD) = ?

#Table20|OD_USER_FUNCTION_MB
generate.select.odUserFunctionMb=SELECT DISTINCT F.CD AS OD_GCIF, E.CD AS OD_USER_NO, B.ROLE AS ROLE, \
  TO_CHAR(B.FUNC_ID) AS OD_SUBPROD_CODE, TO_CHAR(D.NO) AS OD_ACC_NO \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT C, TBL_ACCOUNT D, TBL_CORP_USR E, \
  TBL_CORPORATION F \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID AND A.ID = E.CORP_GRP_ID \
  AND A.CORP_ID = F.ID AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS =2 AND E.STATUS =2 AND \
  B.ROLE IS NOT NULL AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 \
  AND C.FUNC_ID IS NOT NULL)) AND F.STATUS = 2 AND UPPER(F.CD) = ? \
    AND D.NO IN (SELECT T1.NO \
    FROM TBL_ACCOUNT T1, TBL_CORPORATION T2 \
    WHERE T1.CORP_ID = T2.ID AND T1.STATUS = 2 AND T1.IS_OWN = 1 AND T2.STATUS = 2 AND UPPER(T2.CD) = ? AND LPAD(T1.CIF, 10, '0') = ?) \
UNION ALL \
SELECT DISTINCT B.CD AS OD_GCIF, A.CD AS OD_USER_NO, A.ROLE AS ROLE, 'ADMIN' AS OD_SUBPROD_CODE, 'ADMIN' AS OD_ACC_NO \
  FROM TBL_CORP_USR A, TBL_CORPORATION B \
  WHERE B.ID = A.CORP_ID \
  AND A.STATUS =2 AND B.STATUS =2 AND \
  A.ROLE IN (6,7,8) AND UPPER(B.CD) = ?

generate.select.roles=SELECT ROLES "OD_ROLES" \
  ,TO_CHAR(SUBSTR(ROLES, 1, INSTR(ROLES,'-',1)-1)) "OD_CLASS" \
  ,ROLE "OD_ROLE" \
  ,'A' || (ROWNUM + 10) ||'ALL' OD_LEVEL FROM ( \
  SELECT DISTINCT TO_CHAR(NVL(DECODE(ROLE,1,CLASS,2,CLASS,3,CLASS,'ANY'), 'ANY') || '-' || \
  CASE WHEN ROLE = 0 THEN 'MAKER' \
  WHEN ROLE = 1 THEN 'VERIFIER' \
  WHEN ROLE = 2 THEN 'AUTHORIZER' \
  WHEN ROLE = 3 THEN 'RELEASER' \
  WHEN ROLE = 4 THEN 'VIEWER' \
  WHEN ROLE = 5 THEN 'MULTIROLE' \
  WHEN ROLE = 6 THEN 'SYSAD' \
  WHEN ROLE = 7 THEN 'SYSADENC' \
  WHEN ROLE = 8 THEN 'SYSADAPP' \
  END ) AS "ROLES", \
  DECODE(ROLE, 1, TO_CHAR(CLASS), 2, TO_CHAR(CLASS), 3, TO_CHAR(CLASS), 'ANY') "CLASS", ROLE \
  FROM TBL_CORP_GROUP_SERVICE WHERE CORP_GROUP_ID IN (SELECT ID FROM TBL_CORP_GROUP WHERE CORP_ID IN ( \
  SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2)) \
  AND ROLE IS NOT NULL \
  UNION \
  SELECT DISTINCT TO_CHAR('ANY-'||ROLES) "ROLES",'ANY' "CLASS", ROLE \
  FROM (SELECT DISTINCT 'MAKER' "ROLES", MAKER_RULE , 0 "ROLE" \
  FROM TBL_TRANSACTION_MATRIX \
  WHERE CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND STATUS = 2) A \
  UNION \
  SELECT DISTINCT TO_CHAR(DECODE(ROLE, 1, TO_CHAR(SUBSTR(REGEXP_SUBSTR(CLASS_COUNT,?, \
  1, LEVEL), 1, 1) || '-' || ROLES), 2, TO_CHAR(SUBSTR(REGEXP_SUBSTR(CLASS_COUNT,?, \
  1, LEVEL), 1, 1) || '-' || ROLES), 3, TO_CHAR(SUBSTR(REGEXP_SUBSTR(CLASS_COUNT,?, \
  1, LEVEL), 1, 1) || '-' || ROLES),'ANY-'||ROLES)) "ROLES", TO_CHAR(DECODE(ROLE,1,TO_CHAR(SUBSTR(REGEXP_SUBSTR( \
  CLASS_COUNT,?, 1, level),1,1)),2,TO_CHAR(SUBSTR(REGEXP_SUBSTR( \
  CLASS_COUNT,?, 1, level),1,1)),3,TO_CHAR(SUBSTR(REGEXP_SUBSTR( \
  CLASS_COUNT,?, 1, level),1,1)),'ANY')) "CLASS", ROLE \
  FROM (SELECT 'A'||NVL(COUNT_A,0)||'B'||NVL(COUNT_B,0)||'C'||NVL(COUNT_C,0)||'D'||NVL(COUNT_D,0)||'E'|| \
  NVL(COUNT_E,0)||'F'||NVL(COUNT_F,0)||'G'||NVL(COUNT_G,0)||'H'||NVL(COUNT_H,0)||'I'||NVL(COUNT_I,0)||'J'|| \
  NVL(COUNT_J,0)||'K'||NVL(COUNT_K,0)||'L'||NVL(COUNT_L,0)||'M'||NVL(COUNT_M,0)||'N'||NVL(COUNT_N,0)||'O'|| \
  NVL(COUNT_O,0)||'P'||NVL(COUNT_P,0)||'Q'||NVL(COUNT_Q,0)||'R'||NVL(COUNT_R,0)||'S'||NVL(COUNT_S,0)||'T'|| \
  NVL(COUNT_T,0)||'U'||NVL(COUNT_U,0)||'V'||NVL(COUNT_V,0)||'W'||NVL(COUNT_W,0)||'X'||NVL(COUNT_X,0)||'Y'|| \
  NVL(COUNT_Y,0)||'Z'||NVL(COUNT_Z,0) CLASS_COUNT, ROLE, ROW_SILO, \
  CASE WHEN ROLE = 0 THEN 'MAKER' \
  WHEN ROLE = 1 THEN 'VERIFIER' \
  WHEN ROLE = 2 THEN 'AUTHORIZER' \
  WHEN ROLE = 3 THEN 'RELEASER' \
  WHEN ROLE = 4 THEN 'VIEWER' \
  WHEN ROLE = 5 THEN 'MULTIROLE' \
  WHEN ROLE = 6 THEN 'SYSAD' \
  WHEN ROLE = 7 THEN 'SYSADENC' \
  WHEN ROLE = 8 THEN 'SYSADAPP' \
  END  AS "ROLES" \
  FROM TBL_SIGNATORY_COUNT \
  WHERE \
  CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND STATUS = 2) A \
  CONNECT BY REGEXP_SUBSTR(CLASS_COUNT,?, 1, LEVEL) IS NOT NULL \
  ORDER BY ROLE, CLASS ASC)


generate.select.rules=SELECT DSCP, MAT_ID, MAT_RULE_ID, LOWER_LIMIT, UPPER_LIMIT, IS_SILO, ROLE, \
  ROW_SILO, NVL(REPLACE(TRIM(RULES),'   ', ' & '), NVL(ROLE,0)||'_NA') AS RULES \
  FROM (\
  SELECT C.DSCP ,C.ID MAT_ID, A.ID MAT_RULE_ID, LOWER_LIMIT, UPPER_LIMIT, IS_SILO,  B.ROLE, B.ROW_SILO, \
  CASE WHEN COUNT_A IS NOT NULL  AND COUNT_A<> 0 then COUNT_A||'_A   ' END || \
  CASE WHEN COUNT_B IS NOT NULL  AND COUNT_B<> 0 then COUNT_B||'_B   ' END || \
  CASE WHEN COUNT_C IS NOT NULL  AND COUNT_C<> 0 then COUNT_C||'_C   ' END || \
  CASE WHEN COUNT_D IS NOT NULL  AND COUNT_D<> 0 then COUNT_D||'_D   ' END || \
  CASE WHEN COUNT_E IS NOT NULL  AND COUNT_E<> 0 then COUNT_E||'_E   ' END || \
  CASE WHEN COUNT_F IS NOT NULL  AND COUNT_F<> 0 then COUNT_F||'_F   ' END || \
  CASE WHEN COUNT_G IS NOT NULL  AND COUNT_G<> 0 then COUNT_G||'_G   ' END || \
  CASE WHEN COUNT_H IS NOT NULL  AND COUNT_H<> 0 then COUNT_H||'_H   ' END || \
  CASE WHEN COUNT_I IS NOT NULL  AND COUNT_I<> 0 then COUNT_I||'_I   ' END || \
  CASE WHEN COUNT_J IS NOT NULL  AND COUNT_J<> 0 then COUNT_J||'_J   ' END || \
  CASE WHEN COUNT_K IS NOT NULL  AND COUNT_K<> 0 then COUNT_K||'_K   ' END || \
  CASE WHEN COUNT_L IS NOT NULL  AND COUNT_L<> 0 then COUNT_L||'_L   ' END || \
  CASE WHEN COUNT_M IS NOT NULL  AND COUNT_M<> 0 then COUNT_M||'_M   ' END || \
  CASE WHEN COUNT_N IS NOT NULL  AND COUNT_N<> 0 then COUNT_N||'_N   ' END || \
  CASE WHEN COUNT_O IS NOT NULL  AND COUNT_O<> 0 then COUNT_O||'_O   ' END || \
  CASE WHEN COUNT_P IS NOT NULL  AND COUNT_P<> 0 then COUNT_P||'_P   ' END || \
  CASE WHEN COUNT_Q IS NOT NULL  AND COUNT_Q<> 0 then COUNT_Q||'_Q   ' END || \
  CASE WHEN COUNT_R IS NOT NULL  AND COUNT_R<> 0 then COUNT_R||'_R   ' END || \
  CASE WHEN COUNT_S IS NOT NULL  AND COUNT_S<> 0 then COUNT_S||'_S   ' END || \
  CASE WHEN COUNT_T IS NOT NULL  AND COUNT_T<> 0 then COUNT_T||'_T   ' END || \
  CASE WHEN COUNT_U IS NOT NULL  AND COUNT_U<> 0 then COUNT_U||'_U   ' END || \
  CASE WHEN COUNT_V IS NOT NULL  AND COUNT_V<> 0 then COUNT_V||'_V   ' END || \
  CASE WHEN COUNT_W IS NOT NULL  AND COUNT_W<> 0 then COUNT_W||'_W   ' END || \
  CASE WHEN COUNT_X IS NOT NULL  AND COUNT_X<> 0 then COUNT_X||'_X   ' END || \
  CASE WHEN COUNT_Y IS NOT NULL  AND COUNT_Y<> 0 then COUNT_Y||'_Y   ' END || \
  CASE WHEN COUNT_Z IS NOT NULL  AND COUNT_Z<> 0 then COUNT_Z||'_Z   ' END AS "RULES" \
  FROM TBL_MATRIX C, TBL_TRANSACTION_MATRIX A \
  LEFT JOIN TBL_SIGNATORY_COUNT B \
		ON A.ID = B.TXN_MATRIX_ID \
  WHERE C.CORP_ID = A.CORP_ID \
  AND C.ID = A.MATRIX_ID \
  AND A.STATUS = 2 \
  AND (B.STATUS = 2 OR B.STATUS IS NULL) \
  AND C.STATUS = 2 \
  AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) \
  AND NVL(ROW_SILO, 0) = 0 \
  ORDER BY A.ID, ROW_SILO, ROLE)

generate.select.rulesAcct=SELECT DISTINCT AB.MATRIXID MATRIX_ID, AB.TRANMATRIXID TRAN_MATRIX_ID, AB.FUNC_ID, \
  AB.CURRENCY_CD, CD.NO ACCT_NO , CD.ROLE \
  FROM (\
    SELECT DISTINCT C.FUNC_ID, A.ID MATRIXID, B.ID TRANMATRIXID, A.CURRENCY_CD, A.CORP_ID \
    FROM TBL_MATRIX A, TBL_TRANSACTION_MATRIX B, TBL_MATRIX_SERVICE C \
    WHERE A.ID = B.MATRIX_ID AND A.ID = C.MATRIX_ID \
    AND A.STATUS = 2 AND B.STATUS = 2 AND C.STATUS = 2 \
    AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS =2 )) AB, (\
  SELECT B.ROLE,  B.FUNC_ID, D.NO, A.CORP_ID \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT  C, TBL_ACCOUNT D \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID \
  AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS = 2 AND B.ROLE IS NOT NULL \
  AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 AND C.FUNC_ID \
  IS NOT NULL)) \
  AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND LPAD(D.CIF, 10, '0') = ?) CD \
  WHERE AB.FUNC_ID = CD.FUNC_ID AND AB.CORP_ID = CD.CORP_ID

generate.select.userRoles=SELECT DISTINCT AB.CORP_GROUP_ID, CD, ROLE, ROLES, CLASS FROM \
  (\
    SELECT B.ID CORP_GROUP_ID, A.CD, B.ROLE, \
    CASE WHEN B.ROLE = 0 THEN 'MAKER' \
    WHEN B.ROLE = 1 THEN 'VERIFIER' \
    WHEN B.ROLE = 2 THEN 'AUTHORIZER' \
    WHEN B.ROLE = 3 THEN 'RELEASER' \
    WHEN B.ROLE = 4 THEN 'VIEWER' \
    WHEN B.ROLE = 5 THEN 'MULTIROLE' \
    WHEN B.ROLE = 6 THEN 'SYSAD' \
    WHEN B.ROLE = 7 THEN 'SYSADENC' \
    WHEN B.ROLE = 8 THEN 'SYSADAPP' \
    END  AS "ROLES" \
    FROM TBL_CORP_USR A, TBL_CORP_GROUP B, TBL_CORP_GROUP_SERVICE C \
    WHERE A.CORP_GRP_ID = B.ID AND B.ID = C.CORP_GROUP_ID \
    AND A.STATUS = 2 AND B.STATUS = 2 AND C.STATUS = 2 \
    AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2)) AB, \
    (SELECT DISTINCT CLASS, CORP_GROUP_ID FROM TBL_CORP_GROUP_SERVICE WHERE CLASS IS NOT NULL) CD \
  WHERE AB.CORP_GROUP_ID = CD.CORP_GROUP_ID(+) 

generate.select.beneficiaryMaintenance=SELECT A.*, ? || LPAD(TO_CHAR(rownum), 5, '0') REFERENCE_NO \
  FROM (SELECT 'A' TXN_STATUS, LPAD(?, 10, '0') CUST_ID, 'A2ATP' BUSINESSPRODCODE, NO BENEACCNO, SUBSTR(NAME, 1, 70) BENENAME, TO_CHAR(ALIAS) ALIASNAME, \
  TYPE_CD BENEACCTYPE, 'BDO Unibank' BENEBANKNM, TO_CHAR(TO_NUMBER(BRANCH_CD)) BENEBRANCHNM, 'BDO Unibank' BENEBANKNMINTER, 'Not Applicable' BENEADDRESS1 \
  FROM TBL_ACCOUNT \
  WHERE IS_OWN = 0 AND STATUS = 2 AND CIF IS NOT NULL \
  AND CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) \
UNION ALL \
SELECT 'A' TXN_STATUS, LPAD(?, 10, '0') CUST_ID, 'ACA' BUSINESSPRODCODE, \
  ACCT_NO BENEACCNO, SUBSTR(ACCT_NAME, 1, 70) BENENAME, '' ALIASNAME, ACCT_TYPE_CD BENEACCTYPE, 'BDO Unibank' BENEBANKNM, '' BENEBRANCHNM,  'BDO Unibank' BENEBANKNMINTER, 'Not Applicable' BENEADDRESS1 \
  FROM TBL_ACA_ACCOUNT \
   WHERE STATUS = 2 AND CIF IS NOT NULL \
  AND CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2)) A \

generate.select.cimSubProdAttrMapMb=SELECT DISTINCT TO_CHAR(B.FUNC_ID) AS OD_SUBPROD_CODE \
  FROM TBL_CORP_GROUP A, TBL_CORP_GROUP_SERVICE B, TBL_CORP_GROUP_ACCOUNT  C, TBL_ACCOUNT D \
  WHERE A.ID = B.CORP_GROUP_ID AND A.ID = C.CORP_GROUP_ID AND C.CORP_ACCOUNT_ID = D.ID \
  AND A.STATUS =2 AND B.STATUS =2 AND C.STATUS = 2 AND D.STATUS =2 AND B.ROLE IS NOT NULL \
  AND C.IS_OWN =1 AND ((B.ALL_OR_SPECIFIC = 1 AND C.FUNC_ID IS NULL) OR (B.ALL_OR_SPECIFIC = 0 AND C.FUNC_ID IS \
  NOT NULL)) AND A.CORP_ID IN (SELECT ID FROM TBL_CORPORATION WHERE UPPER(CD) = ? AND STATUS = 2) AND LPAD(D.CIF, 10, '0') = ?

# SELECT FROM TEMP TABLES IN CIBUTUAT
migrate.select.cimCustDefnMb=SELECT * FROM CIM_CUST_DEFN_MB

migrate.select.cimCustAcctMb=SELECT * FROM CIM_CUST_ACCT_MB

migrate.select.cimCustContactInfoMb=SELECT * FROM CIM_CUST_CONTACT_INFO_MB

migrate.select.cimDomainDefn=SELECT * FROM CIM_DOMAIN_DEFN

migrate.select.cimCustomerLimitMb=SELECT * FROM CIM_CUSTOMER_LIMIT_MB

migrate.select.odUsergroupMb=SELECT * FROM OD_USERGROUP_MB

migrate.select.odCorporateFunctionMb=SELECT * FROM OD_CORPORATE_FUNCTION_MB

migrate.select.odUsersMb=SELECT * FROM OD_USERS_MB

migrate.select.orbiibsNickname=SELECT * FROM ORBIIBS_NICKNAME

migrate.select.odUserFunctionMb=SELECT * FROM OD_USER_FUNCTION_MB

migrate.select.odUsergpFunctionMb=SELECT * \
  FROM OD_USERGP_FUNCTION_MB T1, CORP_GROUP_ID_CONVERT T2 \
  WHERE T1.OD_USERGROUP_CODE = T2.CMS_CG_ID

migrate.select.odUsergpLimitsMb=SELECT * FROM OD_USERGP_LIMITS_MB

migrate.select.odRolesMb=SELECT * FROM OD_ROLES_MB

migrate.select.odRulesMb=select * from OD_RULES_MB \
where OD_RULE_ID in (select distinct OD_RULE_ID from OD_RULES_ACC_MAP_MB) \
AND OD_RULE_ID IN (select distinct od_rule_id from OD_RULES_DEF_MB)

migrate.select.odRulesDefMb=select * from OD_RULES_DEF_MB \
where OD_RULE_ID in (select distinct OD_RULE_ID from OD_RULES_MB) \
AND OD_RULE_ID in (select distinct OD_RULE_ID from OD_RULES_ACC_MAP_MB)

migrate.select.odParsedRuleMb=select * from OD_PARSED_RULE_MB \
where OD_RULE_PARSE_ID in \
(select distinct OD_RULE_PARSE_ID from OD_RULES_DEF_MB \
where OD_RULE_ID in (select distinct OD_RULE_ID from OD_RULES_MB) \
AND OD_RULE_ID in (select distinct OD_RULE_ID from OD_RULES_ACC_MAP_MB))

migrate.select.odRulesAccMapMb=select * from OD_RULES_ACC_MAP_MB \
where OD_RULE_ID in (select distinct OD_RULE_ID from OD_RULES_MB) \
AND  OD_RULE_ID IN (select distinct od_rule_id from OD_RULES_DEF_MB)

migrate.select.odUserRolesMapMb=SELECT * FROM OD_USER_ROLES_MAP_MB

migrate.select.beneficiaryMaintenance=SELECT * FROM BENEFICIARY_MAINTENANCE

#Table04
migrate.select.cimCustBillingDetailsMb=SELECT * FROM CIM_CUST_BILLING_DETAILS_MB

#Table05
migrate.select.cimPaymentBkftDtMb=SELECT * FROM CIM_PAYMENT_BKFT_DT_MB

#Table06|CIM_PAYMENT_CUST_PREF_MB
migrate.select.cimPaymentCustPrefMb=SELECT * FROM CIM_PAYMENT_CUST_PREF_MB

#Table07
migrate.select.cimPaymentParamsMb=SELECT * FROM CIM_PAYMENT_PARAMS_MB

#Table08
migrate.select.cimBusinessParamsMb=SELECT * FROM CIM_BUSINESS_PARAMS_MB

#Table12
migrate.select.odCorporateLimitsMb=SELECT * FROM OD_CORPORATE_LIMITS_MB

#Table18
migrate.select.odUserLimitsMb=SELECT * FROM OD_USER_LIMITS_MB

migrate.select.cimSubProdAttrMapMb=SELECT * FROM CIM_SUBPROD_ATTR_MAP_MB

#special characters replacements
query.specialcharacter.replacement=SELECT * FROM SPECIAL_CHARACTERS